@model FPTBookstoreApplication.Models.Book

@{
    ViewBag.Title = "AddBook";
    Layout = "~/Views/Shared/_AdminPage.cshtml";
}

@{ WebImage photo = null;
    var newFileName = "";
    var imagePath = "";

    if (IsPost)
    {
        photo = WebImage.GetImageFromRequest();

        if (photo != null)
        {
            newFileName = Guid.NewGuid().ToString() + "_" +
               Path.GetFileName(photo.FileName);
            imagePath = @"images\" + newFileName;
            photo.Save(@"~/FPTBookstoreApplication/Assets/images/img-Books" + imagePath);
        }
    }
}


<div class="wrapper">

    @using (Html.BeginForm("AddBook", "ManageBook", FormMethod.Post, new { @class = "login-form", role = "form" }))
    {
        @Html.AntiForgeryToken()

        <div class="header">
            <h2 class="header-login">Add New Book</h2>
        </div>

        <div class="login-items">

            <div class="username-password-items">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                @Html.LabelFor(model => model.BookName, htmlAttributes: new { @class = "header-input-item" })
                @Html.EditorFor(model => model.BookName, new { htmlAttributes = new { @class = "input-item" } })
                @Html.ValidationMessageFor(model => model.BookName, "", new { @class = "text-danger" })





                @Html.ValidationMessageFor(model => model.Img, "", new { @class = "text-danger" })


                <fieldset>
                    @*@Html.LabelFor(model => model.Img, htmlAttributes: new { @class = "header-input-item" })
        @Html.TextBoxFor(model => model.Img, new { htmlAttributes = new { @class = "input-item", type="file", name="Image", size="35" } })*@
                    <input type="file" name="Image" size="35" />
                    <br />
                    <input type="submit" value="Upload" />
                </fieldset>

                @if (imagePath != "")
                {
                    <div class="result"><img src="@imagePath" alt="image" /></div>
                }


                @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "header-input-item" })
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "input-item" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })


                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "header-input-item" })
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "input-item" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })


                @Html.LabelFor(model => model.CategoryId, "Category", htmlAttributes: new { @class = "header-input-item" })
                @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "input-item" })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })


                @Html.LabelFor(model => model.AuthorId, "Author's Name", htmlAttributes: new { @class = "header-input-item" })
                @Html.DropDownList("AuthorId", null, htmlAttributes: new { @class = "input-item" })
                @Html.ValidationMessageFor(model => model.AuthorId, "", new { @class = "text-danger" })

                @Html.LabelFor(model => model.DateAdd, htmlAttributes: new { @class = "header-input-item" })
                @Html.EditorFor(model => model.DateAdd, new { htmlAttributes = new { @class = "input-item" } })
                @Html.ValidationMessageFor(model => model.DateAdd, "", new { @class = "text-danger" })



                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "header-input-item" })
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "input-item" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>

            <div style="margin-bottom:5%;" class="btn-item">
                <button type="submit" class="submit-btn1">Add New</button>
            </div>
            <div class="btn-item">
                <button class="submit-btn23">
                    @Html.ActionLink("Cancel", "Index", "ManageBook")
                </button>
            </div>

        </div>
    }
</div>
